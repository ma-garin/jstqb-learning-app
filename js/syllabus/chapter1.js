// js/syllabus/chapter1.js

const chapter1 = {
    chapter: "1",
    title: "テストプロセスにおけるテストアナリストのタスク - 150 分",
    sections: [
        {
            section: "1.1",
            title: "イントロダクション",
            objectives: [
                "TA-1.1.1 （K1）ISTQB® Foundation Levelシラバスで説明されているテストプロセス活動を認識する。",
                "TA-1.1.2 （K2）テストアナリストにとって特に関連するテストプロセス活動を説明する。"
            ],
            keyTerms: [
                { term: "テスト", definition: "指定された要求事項に対して、システムまたはコンポーネントが適切であるかどうかを評価し、指定された結果と実際の結果との相違を特定するプロセス。また、そのプロセスに含まれるすべてのライフサイクル活動。" }
            ],
            content: [
                "ISTQB® Foundation Level シラバスでは、次の活動を含むテストプロセスを説明している。",
                "・テスト計画",
                "・テストのモニタリング、およびコントロール",
                "・テスト分析",
                "・テスト設計",
                "・テスト実装",
                "・テスト実行",
                "・テスト完了",
                "本 Advanced Level Test Analyst シラバスでは、テストアナリストに特に関連する活動を詳細に説明する。本書では、様々なソフトウェア開発ライフサイクル（SDLC）モデルへの適合性を向上させるために、テストプロセスをさらに詳細に解説する。",
                "適切なテストの決定、それらの設計、実装、および実行は、テストアナリストが焦点を当てる主要な領域である。テストプロセスの他の活動を理解することも重要であるが、通常テストアナリストの主要な作業は、次の活動に重点を置く。",
                "・テスト分析",
                "・テスト設計",
                "・テスト実装",
                "・テスト実行",
                "テストプロセスの他の活動については、Foundation Level で適切に説明されており、このレベルでのさらなる詳細は必要ない。"
            ]
        },
        {
            section: "1.2",
            title: "ソフトウェア開発ライフサイクルにおけるテスト",
            objectives: [
                "TA-1.2.1 （K2）対応するソフトウェア開発ライフサイクルモデルに応じて、テストアナリストが関与するタイミングとその関わり方がどのように異なるのか、またその理由を説明する。"
            ],
            keyTerms: [],
            content: [
                "テスト戦略を定義する際には、SDLC 全体を考慮すべきである。テストアナリストが関与するタイミングは SDLC ごとに異なり、関与の程度、必要な時間、利用可能な情報、および期待も同様に異なる。テストアナリストは、他の関連組織の業務へ提供する情報の種類を把握しておかなければならない。提供先と提供する情報は以下の通り。",
                "・要求エンジニアリングおよびマネジメント - 要件レビューのフィードバック",
                "・プロジェクトマネジメント - スケジュールに対する入力",
                "・構成管理および変更管理 - ビルド検証テストの結果、バージョンコントロールの情報",
                "・ソフトウェア開発 - 検出された欠陥の通知",
                "・ソフトウェアメンテナンス - 欠陥レポート、欠陥除去効率、確認テスト",
                "・テクニカルサポート - 正確に文書化した回避策および既知の問題",
                "・テクニカルドキュメント作成（例えば、データベース設計仕様、テスト環境ドキュメント）- これらのドキュメントへの入力とドキュメントのテクニカルレビュー",
                "テストの活動は、選択した SDLC（シーケンシャル、イテレーティブ、インクリメンタル、またはそれらのハイブリッドのいずれか）と整合している必要がある。例えば、シーケンシャルな V 字モデルの場合で、テストプロセスをシステムテストレベルに適用すると、次の内容に沿ったものとなる。",
                "・プロジェクト計画と同時にシステムテスト計画を始め、テストモニタリングとテストコントロールをテスト完了まで継続する。これは、プロジェクトをマネジメントする目的でテストアナリストが提供するスケジュールに影響する。",
                "・システムテストのテスト分析およびテスト設計は、システム要件仕様、システムおよびアーキテクチャー（ハイレベル）設計仕様、およびコンポーネント（ローレベル）設計仕様などのドキュメントに沿って行う。",
                "・システムテスト環境の実装は、システム設計時に開始する場合があるものの、その大部分は、コーディングおよびコンポーネントテストと同時に開始するのが常であり、システムテストの実行開始数日前までシステムテスト実装への取り組みが続いてしまうことが多い。",
                "・システムテストの実行は、テストの開始基準を満たした（または必要に応じて免除された）ときに始まる。これは最低でもコンポーネントテストと多くの場合はコンポーネント統合テストも終了基準を満たしていることを意味する。システムテストの実行は、システムテスト終了基準を満たすまで継続する。",
                "・システムテストの完了活動は、システムテスト終了基準を満たした後に実行する。",
                "イテレーティブモデルおよびインクリメンタルモデルでは、活動を異なる順番で実行したり、一部の活動を除外したりすることがある。例えば、イテレーティブモデルでは、イテレーションごとにテスト活動の縮小セットを使用することがある。テスト分析、設計、実装、および実行をイテレーションごとに実行し、ハイレベルの計画作業をプロジェクトの開始時のみ、完了タスクをプロジェクトの終了時のみに実行することがある。",
                "アジャイルソフトウェア開発では、あまり形式ばらないプロセスを使用し、プロジェクトステークホルダーと密な関係を築いて、プロジェクト内で変更をより簡単に行うことが一般的である。テストアナリストの役割が明確に定義されないことがある。包括的なテストドキュメントを作成することは少なく、日々のコミュニケーションは手短かつ頻繁に行う。",
                "アジャイルソフトウェア開発では、開始時点からテストを行う。つまり、開発者が初期のアーキテクチャーおよび設計の作業を行うプロダクト開発の開始時から、テストを行い始める。レビューは形式的には行わないこともあるが、ソフトウェア開発が進む中で継続的に行われる。テストはプロジェクト全体を通して行われ、テストアナリストのタスクはチームが行うことが期待される。",
                "イテレーティブモデルおよびインクリメンタルモデルは、顧客の要件が進展するにつれ変化することが予測されるアジャイルソフトウェア開発から、V 字モデルのアプローチを組み合わせたイテレーティブ／インクリメンタル開発などのハイブリッドモデルにまで及ぶ。このようなハイブリッドモデルの場合、テストアナリストは計画および設計の一部分に関与し、イテレーティブ／インクリメンタルな活動中に、より相互作用的な役割へと変わっていく必要がある。",
                "使用する SDLC に関係なく、テストアナリストは関与への期待度とタイミングを理解する必要がある。テストアナリストは、事前に定義されたロールモデルに固執することなく、特定のSDLC への活動と関与のタイミングを調整することにより、ソフトウェア品質へ効果的に貢献する。"
            ]
        },
        {
            section: "1.3",
            title: "テスト分析",
            objectives: [
                "TA-1.3.1 （K2）分析の活動を行う際に、テストアナリストにとって適切なタスクをまとめる。"
            ],
            keyTerms: [
                { term: "テストベース", definition: "テスト対象について記述した、テストベースとなりうる知識体系。（例：要件、ユーザーストーリー）" },
                { term: "テスト条件", definition: "テストされるアイテムまたはシステムのあるべき姿（機能、非機能、構造、変更など）で、テストによって検証され得るもの。" }
            ],
            content: [
                "テスト計画では、テストプロジェクトの範囲を定義する。テスト分析では、テストアナリストがこの範囲に対して、次のことを行う。",
                "・テストベースを分析する。",
                "・テストベースのさまざまな種類の欠陥を識別する。",
                "・テスト対象のテスト条件とフィーチャーを識別し、優先度を割り当てる。",
                "・テストベースの各要素と関連するテスト条件の間に双方向のトレーサビリティを確立する。",
                "・リスクベースドテストに付随するタスクを実行する（第 2 章を参照）。",
                "テストアナリストはテスト分析を効果的に進めるために、次の開始基準が満たされていることを確認する必要がある。",
                "・（例えば、要件、ユーザーストーリーといった）テスト対象について記述した、テストベースとなりうる知識体系がある（[ISTQB_FL_SYL] 1.4.2 節と 2.2 節を参照、またはテストベースになりうる情報源の一覧）。",
                "・このテストベースは、適切な結果でレビューに合格しており、レビュー後に必要に応じて更新されている。ハイレベルテストケースを定義する作業が予定されている場合（1.4.1 節参照）、テストベースはまだ完全に定義する必要はないことがある。アジャイルソフトウェア開発では、各イテレーションの開始時にユーザーストーリーを洗練していくので、このレビューサイクルは繰り返すこととなる。",
                "・テスト対象に対して、残りのテストタスクを完了するために適切な予算とスケジュールが確保されている。",
                "テスト条件を識別するには、通常、テストベースをテスト目的（テスト計画で定義済み）とともに分析する。ドキュメントが古いままで更新されていないか、存在しない場合、例えばワークショップやイテレーション計画作業の際に、関連するステークホルダーと協議することによりテスト条件を識別できることがある。アジャイルソフトウェア開発では、ユーザーストーリーの一部として定義されている受け入れ基準が、テスト設計のベースとして使用されることが多い。",
                "テスト条件は、通常、テストされるアイテムごとに具体的にするものであるが、いくつか標準的な考慮事項がテストアナリストにはある。",
                "・一般的には、テスト条件を様々な詳細度合いで定義することが望ましい。まず、テストをするための大まかな対象を定義するために、「画面 x の機能性」といったハイレベルの条件を識別する、次に、具体的なテストケースのベースとして、「画面 x では、正しい長さよりも１桁足りないアカウント番号を拒否する」といった、より詳細な条件を識別する。このような階層アプローチを使用してテスト条件を定義することにより、ハイレベルのアイテムに対するカバレッジを十分なものにすることができる。このアプローチを使うことで、テストアナリストは、まだ洗練されていないユーザーストーリーに対するハイレベルなテスト条件を定義する作業を開始できる。",
                "・プロダクトリスクが定義済みの場合、各プロダクトリスクに対処するために必要なテスト条件を識別し、リスクアイテムにまで遡ることができる必要がある。",
                "テスト戦略そして／またはテスト計画内で識別されているテスト技法を適用することで、テスト分析活動を促進し、次の目的の達成が容易になることがある。",
                "・テスト条件の識別",
                "・重要なテスト条件が省略される可能性の低減",
                "・より明瞭で正確なテスト条件の定義",
                "・テスト条件を識別して洗練した後に、これらの条件をステークホルダーと一緒にレビューすることで、要件を明確に理解し、テストをプロジェクトのゴールに一致させることができる。",
                "特定の領域（例えば、ある機能仕様）に対するテスト分析の活動が完了したとき、テストアナリストは、その領域に対してどのような仕様のテストケースを設計しなければならないかが分かるようになっているべきである。"
            ]
        },
        {
            section: "1.4",
            title: "テスト設計",
            objectives: [
                "TA-1.4.1 （K2）ステークホルダーがテスト条件を理解する必要がある理由を説明する。",
                "TA-1.4.2 （K4）特定のプロジェクトシナリオに対して、テストケースの適切な設計レベル（ハイレベルまたはローレベル）を選択する。",
                "TA-1.4.3 （K2）テストケース設計で考慮すべき問題を説明する。"
            ],
            keyTerms: [
                { term: "ハイレベルテストケース", definition: "テストすべきものに関するガイドラインを提供し、テストアナリストが、テスト実行時に実データや手順さえも変更することを可能にするテストケース。" },
                { term: "ローレベルテストケース", definition: "テスト担当者がテストケース（すべてのデータ要件を含む）を実行し、実際の結果を検証するために必要な特定の情報と手順のすべてを提供するテストケース。" }
            ],
            content: [
                "テストプロセスは、テスト計画時に決定した範囲に従い、テストアナリストがテストケースを設計し、それを実装および実行するテストプロセスが続いていく。テスト設計のプロセスは、次の活動を含む。",
                "・ローレベルテストケースまたはハイレベルテストケースがどのテスト領域で最も適切であるかを判断する。",
                "・必要なカバレッジを確保するテスト技法を決定する。使用する可能性がある一連の技法は、テスト計画時に決めてある。",
                "・識別したテスト条件をカバーするテストケースおよびテストケースのセットを設計するために、テスト技法を使用する。",
                "・テスト条件とテストケースに準じた必要なテストデータを識別する。",
                "・テスト環境を設計し、必要なインフラストラクチャーやツールを識別する。",
                "・テストベース、テスト条件、テストケースなどの間で双方向のトレーサビリティを確立する。",
                "リスク分析およびテスト計画で識別した優先度基準は、分析や設計の段階から実装や実行の段階に至るまで、プロセス全体を通して適用すべきである。",
                "設計するテストケースの種類によっては、設計作業時に使用するツールが利用可能か否かをテスト設計の開始基準の 1 つとすることがある。",
                "テストを設計するときには、テストアナリストは次の点に留意しなければならない。",
                "・一部のテストアイテムについては、実行手順を指定するテストスクリプトを定義して対処するよりも、テスト条件のみを定義して対処した方がよい場合がある。この場合、テスト条件はテストスクリプトなしにテストをする際のガイドとして使用できるよう定義すべきである。",
                "・合格／不合格基準を明確に識別すべきである。",
                "・テストケースは、作成者だけでなく、他のテスト担当者が理解できるように定義すべきである。テストケース作成者がテストを実行しない場合、他のテスト担当者はテスト目的およびそのテストケースに関わる重要なことを理解するために、すでに仕様化されたテストケースを参照し、理解することが必要になる。",
                "・テストケースは、（テストケースをレビューする）開発者や（テストケースを承認しなければならない）監査担当者などの他のステークホルダーも理解できるようなテストケースにしなければならない。",
                "・テストケースは、ユーザーインターフェースを通して発生する相互作用だけでなく、テスト対象との相互作用の全種類をカバーすべきである。これには、他のシステムおよび技術的／物理的イベントとの相互作用なども含まれる（詳細については、[IREB_CPRE]参照）。",
                "・テスト対象自体の振る舞いだけでなく、様々なテスト対象間のインターフェースもテストするように、テストケースを設計すべきである。",
                "・テスト設計の労力は、リスクレベルとビジネス価値に合致するように、優先度を割り当て、バランスをとらなければならない。"
            ]
        },
        {
            section: "1.4.1",
            title: "ローレベルテストケースとハイレベルテストケース",
            objectives: [
                "TA-1.4.1.1 （K2）ローレベルテストケースとハイレベルテストケースの長所と短所を説明する。"
            ],
            keyTerms: [],
            content: [
                "テストアナリストの職務の 1 つは、特定の状況で最適なテストケースの設計レベルを決定することである。ローレベルテストケースとハイレベルテストケースについては、[ISTQB_FL_SYL]を参照されたい。これらの設計レベルを使用することの長所と短所を以下に示す。",
                "ローレベルテストケースには、次の長所がある。",
                "・経験の少ないテスト担当者は、プロジェクト内で提供される詳細な情報に頼ることができる。ローレベルテストケースは、テスト担当者がテストケース（すべてのデータ要件を含む）を実行し、実際の結果を検証するために必要な特定の情報と手順のすべてを提供する。",
                "・異なるテスト担当者がテストを再実行しても、同じテスト結果が達成される。",
                "・テストベースに存在する自明ではない欠陥を検出できる。",
                "・詳細の度合いにより、必要に応じて、テストケースについて監査のような独立した検証が可能になる。",
                "・自動化に使うテストケースの実装に費やす時間を削減できる。",
                "ローレベルテストケースには、次の短所がある。",
                "・作成とメンテナンスの両方に非常に多くの労力を必要とする場合がある。",
                "・実行時にテスト担当者の創造力を制限する傾向にある。",
                "・テストベースを明確に定義する必要がある。",
                "・テスト条件のトレーサビリティを確保するための労力が、ハイレベルテストケースよりも多い場合がある。",
                "ハイレベルテストケースには、次の長所がある。",
                "・テストすべきものに関するガイドラインを提供し、テストアナリストが、テスト実行時に実データや手順さえも変更することを可能にする。",
                "・実行のたびに少しずつ違うテストをするので、ローレベルテストケースよりも優れたリスクカバレッジを提供することがある。",
                "・要件プロセスの初期に定義できる。",
                "・テスト実行時に、テストおよびテスト対象の両方に関するテストアナリストの経験を活\n用できる。",
                "・詳細かつ形式的なドキュメントが要求されない場合に定義できる。",
                "・異なるテストデータを使用できる場合に、異なるテストサイクルでの再利用性に優れている。",
                "ハイレベルテストケースには、次の短所がある。",
                "・再現能力が低く、検証を困難にする。これは、ローレベルテストケースで見られる詳細な説明が不足しているためである。",
                "・テスト実行をするためには、より経験のあるテスト担当者が必要となることがある。",
                "・ハイレベルテストケースに基づいて自動化する場合、詳細な情報が不足していることにより、誤った実際の結果を検証したり、検証すべきアイテムを見逃したりすることがある。",
                "要件がより明確になり安定してきたときに、ハイレベルテストケースはローレベルテストケースの開発に使われることもある。この場合、テストケースの作成は順次行われ、ハイレベルからローレベルとなっていき、実行にはローレベルテストケースのみを使用する。"
            ]
        },
        {
            section: "1.4.2",
            title: "テストケースの設計",
            objectives: [
                "TA-1.4.2.1 （K2）テストケースの設計時に考慮すべきアイテムを説明する。",
                "TA-1.4.2.2 （K2）テスト成果物を文書化する範囲に影響を与える要因を説明する。"
            ],
            keyTerms: [],
            content: [
                "テストケースの設計は、識別されたテスト条件に対して、テスト技法（第 3 章参照）を使って段階的な推敲、洗練をしていく。テストケースは、再利用可能であり、検証可能であり、テストベース（要件など）までのトレーサビリティが確保されているべきである。",
                "テスト設計では、次のアイテムを識別する。",
                "・目的（観測可能で測定可能なテスト実行の目的）",
                "・プロジェクトまたはローカライズされたテスト環境のどちらかの要件、およびそのテストのリリース計画、テスト実行前のシステムの状態などの事前条件",
                "・テストデータ要件（テストケースを実行するための入力用データとシステム内に必要なデータの両方）",
                "・明確な合格/不合格基準が定義されている期待結果",
                "・影響を受けたデータ、テスト実行後のシステムの状態、後続処理のためのトリガーなどの事後条件",
                "テストの期待結果を定義することが、特に課題となることがある。これを手動で計算することは単調で時間のかかる作業で、エラーも発生しやすいので、可能な限り、自動化されたテストオラクルを見つけるか、または作成することを推奨する。テスト担当者は、期待結果を識別する際、画面上の出力だけでなく、データおよび環境的な事後条件も考慮する。テストベースが明確に定義されていると、理論的には、正しい結果を容易に識別できる。ただし、テストベースのドキュメントは、曖昧で矛盾を含み重要な領域をカバーしていないか、もしくはまったく存在しないことがある。このような場合、テストアナリストは、特定分野の専門知識を持っているか、もしくはそれらの情報にアクセスできなければならない。また、テストベースが適切に仕様化してあったとしても、複雑な応答の複合的な相互作用により、期待結果の定義が困難になることがあるので、テストオラクルが必須である。アジャイルソフトウェア開発では、テストオラクルはプロダクトオーナーかもしれない。実際の結果の正しさを判断する方法なしにテストケースを実行すると、付加価値または利点が非常に少なくなり、多くの場合、無効なテストレポートやシステムに対する誤った信頼につながる。",
                "テストベースは異なったとしても、すべてのテストレベルに前述の活動を適用することができる。テストを分析および設計するときには、対象のテストレベルとテスト目的に留意する必要がある。このことは、必要な詳細度合いとツール（例えば、コンポーネントテストレベルでのドライバーおよびスタブ）を決定するのに役立つ。",
                "テスト条件およびテストケースの開発時には、一般的に、テスト作業成果物となるいくつかのドキュメントを作成する。実際には、テスト作業成果物を文書化する範囲は大幅に異なる。次の要因が文書化する範囲に影響を及ぼす。",
                "・プロジェクトリスク（文書化する必要のあるもの、文書化してはいけないもの）",
                "・ドキュメントがプロジェクトに提供する「付加価値」",
                "・準拠する必要のある標準および満たす必要のある規制",
                "・SDLC または使用するアプローチ（例えば、アジャイルアプローチでは、「必要最小限」の文書化を目標にする）",
                "・テストベースからテスト分析およびテスト設計を通してのトレーサビリティの要件",
                "テストの範囲に応じて、テスト分析およびテスト設計は、テスト対象の品質特性に対応させる。ISO 25010 標準[ISO25010]が、有効な参照情報を提供している。ハードウェア／ソフトウェアシステムをテストする場合には、その他の特性を適用することがある。",
                "テスト分析およびテスト設計の活動は、レビューおよび静的解析とテスト分析およびテスト設計を組み合わせることにより強化できることがある。テスト分析およびテスト設計を実施する活動の中でテストベースの問題を見つけることがあるため、実際に、テスト分析およびテスト設計を行うことが静的テストの一形態となることがしばしばある。要求仕様に基づいたテスト分析およびテスト設計を行うことは、要件レビューミーティングの準備として優れた方法の 1 つである。要件を読み解き、テストを作成するためにそれを使用するには、要件を理解し、要件の達成度を評価する方法を決定できることが求められる。多くの場合、この活動では、不足している要件、明確でない要件、テストできない要件、または受け入れ基準が定義されていない要件を明らかにする。同様に、テストケース、リスク分析、テスト計画書などのテスト作業成果物をレビュー対象にできる。",
                "要求される詳細なテストインフラストラクチャーの要件は、実際にはテスト実装まで完成しない可能性があるが、テスト設計時に定義することがある。テストインフラストラクチャーは、テスト対象およびテストウェア以外のものも含むことに注意する必要がある。例えば、テストインフラストラクチャーの要件は、場所、機器、担当者、ソフトウェア、ツール、周辺機器、通信機器、ユーザー権限、およびテストを実行するために必要な他のすべてのアイテムを含むことがある。",
                "テスト分析およびテスト設計の終了基準はプロジェクトにより異なるが、2 つの節で説明したすべての事項を定義する終了基準に含めるべきである。重要なのは、終了基準が測定可能であり、以降の手順に必要なすべての情報が提供され、必要なすべての準備が実施されていることである。"
            ]
        },
        {
            section: "1.5",
            title: "テスト実装",
            objectives: [
                "TA-1.5.1 （K2）テスト実装の活動を行う際に、テストアナリストにとって適切なタスクをまとめる。"
            ],
            keyTerms: [
                { term: "テスト手順", definition: "テスト実行の順序と、すべての初期事前条件および実行後活動を含む、テストケースを自動または手動で実行するために必要な指定された行動シーケンス。" },
                { term: "テストスイート", definition: "実行のために集められたテストケースとテスト手順の組み合わせである。" }
            ],
            content: [
                "テスト実装では、テスト分析と設計に基づいてテスト実行に必要なテストウェアの準備をする。次の活動を含む。",
                "・テスト手順、および、場合によっては自動テストスクリプトを作成する",
                "・特定のテストランにおいて実行されるテストスイートとして、テスト手順と（もし存在する\n場合）自動テストスクリプトを整理する",
                "・実行するテストケースとテストスイートの優先度付けについて、テストマネージャーに\n相談する",
                "・テストケースの実行を開始するために必要なテスト実行スケジュール（リソースの割り\n当てを含む）を作成する（[ISTQB_FL_SYL] 5.2.4 節参照）",
                "・テストデータおよびテスト環境の準備を完了する",
                "・テストベースと、テスト条件、テストケース、テスト手順、テストスクリプト、テストスイート\nなどのテストウェアとの間のトレーサビリティを更新する。",
                "テストアナリストはテスト実装時に、テストケースの効率的な実行順序を特定し、テスト手順を作成する。テスト手順を定義する際には、テスト実行の順序に影響を与える可能性のある制約や依存関係を入念に識別することが求められる。テスト手順では、すべての初期事前条件（データリポジトリからのテストデータのロードなど）およびすべての実行後活動（システムステータスのリセットなど）を記述する。",
                "テストアナリストは、グループ化できるテスト手順と自動テストスクリプトを特定し（例えば、それらはすべて特定のハイレベルなビジネスプロセスのテストに関連する）、それらをテストスイートに整理する。これにより、関連するテストケースを一緒に実行できる。",
                "テストアナリストは、効率的なテスト実行が実現できるように、テスト実行スケジュールにテストスイートを配置する。リスクベースドテスト戦略を使用する場合、リスクレベルは、テストケースの実行順序を決定する際に最も優先的に考慮すべき事柄になる。適切な担当者、機器、データ、テスト対象の機能などの可用性のように、他の要因がテストケースの実行順序を決定することもある。",
                "コードが部分ごとにリリースされることは珍しくないので、ソフトウェアがテスト可能になる順序に合わせてテスト工数配分を調整しなければならない。イテレーティブおよびインクリメンタル開発モデルで特に重要なのは、ソフトウェアがテスト可能な順序でテスト用にリリースされるように、テストアナリストが開発者と調整することである。",
                "テスト実装時に行う作業の詳細度合いとそれに関する複雑度は、テスト条件やテストケースの詳細度に影響される場合がある。場合によっては、法規制の適用が求められ、適用する標準（例えば、米国標準 DO-178C（欧州の ED-12C））への準拠の証跡をテスト作業成果物で示すべきである[RTCA DO-178C/ED-12C]。",
                "前述しているように、大抵の場合、テストではテストデータが必要であり、場合によってはデータセットが非常に大きくなることがある。テストアナリストは実装時に、データベースや他のリポジトリなどにロードするために入力データと環境データを作成する。このデータは欠陥の検出を可能にするために、「目的にかなって」いなければならない。テストアナリストは、手動テストで使用するデータの他に、データ駆動型およびキーワード駆動型のテスト（6.2 節参照）で使用するデータを作成することもある。",
                "テスト実装では、テスト環境についても考慮する。この段階で、テストを実行する前に環境をすべて設定し、検証しておくべきである。「目的にかなった」テスト環境は必要不可欠である。つまり、テスト環境は、テストでコントロールしている間に残っている欠陥を洗い出し、故障が発生しない場合は適切に動作し、より高いテストレベル向けの本番環境またはエンドユーザー環境を必要に応じて適切に再現できなければならない。予期しない仕様変更、テスト結果、または他の考慮事項に応じて、テスト環境をテスト実行時に変更する必要がある。テスト実行時にテスト環境を変更する場合、実行済みのテストケースに対して変更が与える影響を評価することが重要となる。",
                "テストアナリストは、テスト実装時に、テスト環境の作成およびメンテナンスの担当者のサポートを得ることができ、かつすべてのテストウェアやテストサポートツールおよび関連するプロセスが使用できる状態にあることを確認すべきである。これらのプロセスは、構成管理、欠陥マネジメント、およびテスト結果の記録やマネジメントを含む。また、テストアナリストは、終了基準に対する現在のステータスの評価およびテスト結果のレポート作成のためのデータを収集する手順を検証しなければならない。",
                "テスト実装では、テスト計画で決定したバランスのとれたアプローチを使用することを推奨する。例えば、分析的なリスクベースドテスト戦略に対処的テスト戦略を混ぜることがよくある。この場合、テスト実装作業の一部を、事前に決定したスクリプトに従わないテスト（スクリプトがないテスト）に割り当てる。",
                "スクリプトがないテストを行うと、期間とカバレッジの予測が困難になることがあり、欠陥の検出率が低下することがあるので、ランダムまたは目的がないものにするべきではない。むしろ、スクリプトがないテストは、タイムボックスにしたセッションとして行うべきであり、それぞれのセッションでは、テストチャーターが最初の方向性を与えるべきであるが、セッションの中でより生産性の高いテストを行う機会が見つかった場合には、チャーターが与えた方向性から自由に離れてよい。テスト担当者は長い年月をかけて、攻撃[Whittaker03]、エラー推測[Myers11]、探索的テスト[Whittaker09]など、様々な経験ベースのテスト技法を開発してきた。テスト分析、テスト設計、およびテスト実装は引き続き行われるが、主にテスト実行期間に行われることになる。",
                "このような対処的テスト戦略の場合、各テストの結果は、以降のテストの分析、設計、および実装に影響を及ぼす。これらの戦略は軽量であり、多くの場合、欠陥を見つけるのに有効であるが、以下に示す短所もある。",
                "・テストアナリストに専門知識を要求する",
                "・期間の予測が困難",
                "・カバレッジの追跡が困難",
                "・テストの再現性を維持するために優れたドキュメントやツールのサポートが必要"
            ]
        },
        {
            section: "1.6",
            title: "テスト実行",
            objectives: [
                "TA-1.6.1 （K2）テスト実行の活動を行う際に、テストアナリストにとって適切なタスクをまとめる。"
            ],
            keyTerms: [
                { term: "終了基準", definition: "テスト活動を終了するための基準。テスト活動を終了してよいかどうかを判断するために使用する。" }
            ],
            content: [
                "テスト実行はテスト実行スケジュールに従って行い、次のタスクを含む（[ISTQB_FL_SYL]参照）。",
                "・手動テスト（探索的テストを含む）を実行する",
                "・自動テストを実行する",
                "・実行結果と期待結果を比較する",
                "・不正を分析して、可能性のある原因を特定する",
                "・故障を観察し、観察に基づいて欠陥を報告する",
                "・テスト実行の実際の結果を記録する",
                "・テスト結果を検討するためテストベースとテストウェアの間でトレーサビリティを更新する",
                "・リグレッションテストを実行する",
                "前述のテスト実行タスクは、テスト担当者またはテストアナリストが行う。",
                "次に示すタスクは、テストアナリストが追加で行う可能性がある典型的なタスクである。",
                "・欠陥が集中しており、さらなるテストが必要になりうるテスト対象の一部を特定する",
                "・探索的テストからの発見事項に基づいて、将来の探索的テストに対する提案を作成する",
                "・テスト実行タスクを行う際に取得した情報から新しいリスクを識別する",
                "・テスト実装活動からのあらゆる作業成果物を改善するための提案を作成する（テスト手順に対する改善など）"
            ]
        }
    ]
};

export default chapter1;