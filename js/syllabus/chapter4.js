// js/syllabus/chapter4.js

const chapter4 = {
    chapter: "4",
    title: "ソフトウェア品質特性のテスト - 180 分",
    sections: [
        {
            section: "4.1",
            title: "イントロダクション",
            objectives: [
                "TA-4.1.1 （K2）機能および非機能テストの品質特性を説明する。",
                "TA-4.1.2 （K2）品質特性のテストにおけるテストアナリストのタスクを説明する。"
            ],
            keyTerms: [
                { term: "品質特性", definition: "システムやコンポーネントが備えるべき特性。機能性、信頼性、使用性、性能効率性、セキュリティ、保守性、移植性など。" }
            ],
            content: [
                "ソフトウェアの品質を評価するために、ISTQB® Foundation Level シラバスは、ISO 25010 などの品質特性モデルについて言及している。これらの品質特性は、機能テストと非機能テストに分類できる。機能テストは、システムが何をすべきかをテストする。非機能テストは、システムがどれくらいうまく機能するかをテストする。本章では、これらの品質特性をテストする際のテストアナリストのタスクと、そのために利用できる技法について説明する。",
                "品質特性のテストにおけるテストアナリストのタスクは次のとおりである。",
                "・テストベース（要件、設計ドキュメントなど）を分析し、機能的および非機能的な品質特性に関連するテスト条件を識別する。",
                "・識別されたテスト条件に対応するテストケースを設計する。",
                "・特定の品質特性をテストするために適切なテスト技法を選択し、適用する。",
                "・テスト対象の品質特性を評価するためのテストデータを準備する。",
                "・テスト環境の要件を定義する。",
                "・テスト実行を通じて、品質特性に関する実際の結果と期待結果を比較し、逸脱を特定する。",
                "・欠陥を報告し、品質特性の欠陥がどこに集中しているかを特定する。",
                "・品質特性に関するテスト結果を分析し、レポートを作成する。"
            ]
        },
        {
            section: "4.2",
            title: "ビジネスドメインテストの品質特性",
            objectives: [
                "TA-4.2.1 （K3）特定のプロジェクトシナリオに対して、機能正確性テストを適用する。",
                "TA-4.2.2 （K3）特定のプロジェクトシナリオに対して、機能適切性テストを適用する。",
                "TA-4.2.3 （K3）特定のプロジェクトシナリオに対して、機能完全性テストを適用する。",
                "TA-4.2.4 （K3）特定のプロジェクトシナリオに対して、相互運用性テストを適用する。",
                "TA-4.2.5 （K3）特定のプロジェクトシナリオに対して、使用性評価を適用する。",
                "TA-4.2.6 （K3）特定のプロジェクトシナリオに対して、移植性テストを適用する。"
            ],
            keyTerms: [],
            content: [
                "このセクションでは、テストアナリストが最も一般的に取り組む品質特性について、詳細なテストの側面とともに説明する。これらの品質特性は、ISO 25010 標準で定義されているものに対応しており、機能特性と非機能特性の両方を含む。テストアナリストは、これらの品質特性を考慮してテスト計画を立て、テストを実行する。"
            ]
        },
        {
            section: "4.2.1",
            title: "機能正確性テスト",
            objectives: [
                "TA-4.2.1.1 （K2）機能正確性テストの目的、前提事項、適用可能性、および限界を説明する。",
                "TA-4.2.1.2 （K3）特定のプロジェクトシナリオに対して、機能正確性テストを適用してテストケースを導出する。"
            ],
            keyTerms: [
                { term: "機能正確性テスト", definition: "システムやコンポーネントが、正確な結果を正しい精度で提供する能力を評価するテスト。計算、データ処理、出力の正確性など。" }
            ],
            content: [
                "機能正確性テストは、システムが、仕様や要件で定義された通りに、正確な結果を正しい精度で提供する能力を評価する。これは、システムが実行する計算、データ処理、出力の正確性に焦点を当てる。多くの機能テストの基本的な側面であり、特に数値計算やデータ変換が関係するシステムでは重要となる。",
                "機能正確性テストの目的は、システムが所定の機能を満たし、正確な結果を生成することを保証することである。このテストは、仕様が明確であり、期待される結果が明確に定義されているという前提に基づいている。",
                "機能正確性テストは、次のような場合に適用可能である。",
                "・数値計算、金融取引、統計分析など、計算が重要なシステム。",
                "・データの入力、処理、出力が厳密なルールに従うシステム。",
                "・複雑なビジネスロジックやアルゴリズムを含むシステム。",
                "機能正確性テストは、次のような場合に限界がある。",
                "・仕様が曖昧または不完全な場合、正確な期待結果を導出することが困難になる。",
                "・計算の精度要件が不明確な場合。",
                "・テストデータの生成が困難な場合、網羅的なテストができない。",
                "機能正確性テストは、システムの信頼性と整合性を確保するために不可欠である。同値分割法、境界値分析、デシジョンテーブルテストなどのブラックボックステスト技法が、このテストに非常に有効である。特に、テストオラクル（期待結果を判断するメカニズム）の準備が重要となる。"
            ]
        },
        {
            section: "4.2.2",
            title: "機能適切性テスト",
            objectives: [
                "TA-4.2.2.1 （K2）機能適切性テストの目的、前提事項、適用可能性、および限界を説明する。",
                "TA-4.2.2.2 （K3）特定のプロジェクトシナリオに対して、機能適切性テストを適用してテストケースを導出する。"
            ],
            keyTerms: [
                { term: "機能適切性テスト", definition: "システムやコンポーネントが、指定されたタスクやユーザーの目的を達成するために適切な機能セットを提供するかどうかを評価するテスト。すべての必要な機能が実装されているか、不要な機能がないかなど。" }
            ],
            content: [
                "機能適切性テストは、システムが、指定されたタスクやユーザーの目的を達成するために適切な機能セットを提供するかどうかを評価する。これは、すべての必要な機能が実装されており、不要な機能がないこと、およびシステムがユーザーのニーズを適切に満たしていることを確認することに焦点を当てる。",
                "機能適切性テストの目的は、システムがユーザーの期待とビジネス要件を完全に満たしていることを保証することである。このテストは、ユーザーのニーズとビジネス要件が明確に定義されており、それに基づいて機能セットを評価できるという前提に基づいている。",
                "機能適切性テストは、次のような場合に適用可能である。",
                "・システムの機能要件がユーザー中心で定義されている場合（例えば、ユースケース、ユーザーストーリー）。",
                "・ビジネスプロセス全体のフローを検証する必要がある場合。",
                "・ユーザー受け入れテスト（UAT）やビジネスプロセステスト。",
                "機能適切性テストは、次のような場合に限界がある。",
                "・ユーザーのニーズやビジネス要件が不明確または頻繁に変更される場合。",
                "・ドキュメント化されていない暗黙的な機能要件が存在する場合。",
                "・ユーザーの多様な利用シナリオをすべてカバーすることが困難な場合。",
                "機能適切性テストは、システムが「正しいことをしているか」を検証するために重要である。ユースケーステスト、チェックリストベースドテスト、探索的テストなどの技法が有効である。特に、プロダクトオーナーやエンドユーザーを含むステークホルダーとの密接な連携が、このテストの成功には不可欠である。"
            ]
        },
        {
            section: "4.2.3",
            title: "機能完全性テスト",
            objectives: [
                "TA-4.2.3.1 （K2）機能完全性テストの目的、前提事項、適用可能性、および限界を説明する。",
                "TA-4.2.3.2 （K3）特定のプロジェクトシナリオに対して、機能完全性テストを適用してテストケースを導出する。"
            ],
            keyTerms: [
                { term: "機能完全性テスト", definition: "システムやコンポーネントが、指定された機能のすべてを完全に提供する能力を評価するテスト。欠落している機能がないか、すべての機能が意図した通りに実装されているかなど。" }
            ],
            content: [
                "機能完全性テストは、システムが、指定された機能のすべてを完全に提供する能力を評価する。これは、欠落している機能がないこと、すべての機能が意図した通りに実装されていること、およびすべての機能が期待される動作をすることを保証することに焦点を当てる。機能適切性テストと密接に関連するが、機能適切性が「適切な機能があるか」に焦点を当てるのに対し、機能完全性は「必要な機能がすべて揃っているか」に焦点を当てる。",
                "機能完全性テストの目的は、システムが要件で定義されたすべての機能を漏れなく実装していることを確認することである。このテストは、機能要件が体系的に文書化されており、それらすべてを網羅的にテストできるという前提に基づいている。",
                "機能完全性テストは、次のような場合に適用可能である。",
                "・詳細な機能要件仕様がある場合。",
                "・要件のカバレッジを測定し、報告する必要がある場合。",
                "・システムのリリース前に、すべての機能が実装されていることを検証したい場合。",
                "機能完全性テストは、次のような場合に限界がある。",
                "・機能要件が不完全または不明確な場合、テストカバレッジの評価が困難になる。",
                "・テスト対象の要件が頻繁に変更される場合、テストケースのメンテナンスが困難になる。",
                "・非機能的な側面や隠れた欠陥を見落とす可能性がある。",
                "機能完全性テストは、トレーサビリティマトリックスを使用して要件とテストケースを結びつけることで、効果的に実行できる。これにより、すべての要件がテストでカバーされていることを確認できる。デシジョンテーブルテスト、状態遷移テスト、ユースケーステストなどの体系的なテスト技法が有効である。"
            ]
        },
        {
            section: "4.2.4",
            title: "相互運用性テスト",
            objectives: [
                "TA-4.2.4.1 （K2）相互運用性テストの目的、前提事項、適用可能性、および限界を説明する。",
                "TA-4.2.4.2 （K3）特定のプロジェクトシナリオに対して、相互運用性テストを適用してテストケースを導出する。"
            ],
            keyTerms: [
                { term: "相互運用性テスト", definition: "システムやコンポーネントが、他のシステムやコンポーネントとデータや機能を交換し、共に使用する能力を評価するテスト。APIテスト、データ交換、通信プロトコルなど。" }
            ],
            content: [
                "相互運用性テストは、システムやコンポーネントが、他のシステムやコンポーネントとデータや機能を交換し、共に使用する能力を評価する。これは、異なるシステム間のインターフェース、通信プロトコル、データ形式の互換性に焦点を当てる。APIテスト、データ交換、連携システムの統合などが含まれる。",
                "相互運用性テストの目的は、システムが意図した通りに外部システムと円滑に連携できることを保証することである。このテストは、インターフェース仕様、通信プロトコル、データ形式が明確に定義されており、それらすべてを検証できるという前提に基づいている。",
                "相互運用性テストは、次のような場合に適用可能である。",
                "・複数のシステムが連携して動作する分散システム。",
                "・API（アプリケーションプログラミングインターフェース）を介して通信するシステム。",
                "・異なるプラットフォーム、データベース、またはテクノロジーを使用するシステム間でのデータ交換。",
                "相互運用性テストは、次のような場合に限界がある。",
                "・連携する外部システムの可用性や安定性がテストに影響を与える可能性がある。",
                "・複数のシステム環境のセットアップとメンテナンスが複雑になる。",
                "・インターフェース仕様が頻繁に変更される場合、テストケースのメンテナンスが困難になる。",
                "相互運用性テストは、システム全体の機能性と信頼性を確保するために不可欠である。データ駆動型テスト、状態遷移テスト、そして探索的テストがこのテストに有効である。連携するシステムの担当者との密接な連携と、共有テスト環境の管理が重要となる。"
            ]
        },
        {
            section: "4.2.5",
            title: "使用性評価",
            objectives: [
                "TA-4.2.5.1 （K2）使用性評価の目的、前提事項、適用可能性、および限界を説明する。",
                "TA-4.2.5.2 （K3）特定のプロジェクトシナリオに対して、使用性評価を適用してテストケースを導出する。"
            ],
            keyTerms: [
                { term: "使用性評価", definition: "システムやコンポーネントが、指定されたユーザーにとって、指定された状況で、どれだけ効果的、効率的、満足して使用できるかを評価するテスト。学習しやすさ、操作の容易さ、エラー耐性、ユーザー満足度など。" }
            ],
            content: [
                "使用性評価は、システムやコンポーネントが、指定されたユーザーにとって、指定された状況で、どれだけ効果的、効率的、満足して使用できるかを評価する。これは、学習しやすさ、操作の容易さ、エラー耐性、ユーザーインターフェースの魅力、ユーザー満足度などに焦点を当てる。ユーザビリティテストやユーザー体験（UX）テストとも呼ばれる。",
                "使用性評価の目的は、システムがユーザーにとって使いやすく、快適であり、ユーザーが目的のタスクを効率的に達成できることを保証することである。この評価は、対象となるユーザーグループの特性、タスク、および使用環境が明確に定義されているという前提に基づいている。",
                "使用性評価は、次のような場合に適用可能である。",
                "・ユーザーインターフェースが重要なシステム。",
                "・エンドユーザーが直接操作するアプリケーション。",
                "・新しい機能やデザインが導入された場合。",
                "・競合製品と比較して使いやすさを改善したい場合。",
                "使用性評価は、次のような場合に限界がある。",
                "・主観的な要素が多いため、客観的な評価が難しい場合がある。",
                "・テストにユーザーを巻き込む必要があるため、時間とリソースが必要。",
                "・ユーザーの行動や期待が多岐にわたるため、すべてのシナリオをカバーすることが困難。",
                "使用性評価は、ユーザー中心の設計と開発において極めて重要である。ユースケーステスト、探索的テスト、ユーザビリティテスト（実際のユーザーによる）などが有効である。ユーザーグループからのフィードバックを収集し、それを分析して改善点を特定することが、この評価の成功には不可欠である。"
            ]
        },
        {
            section: "4.2.6",
            title: "移植性テスト",
            objectives: [
                "TA-4.2.6.1 （K2）移植性テストの目的、前提事項、適用可能性、および限界を説明する。",
                "TA-4.2.6.2 （K3）特定のプロジェクトシナリオに対して、移植性テストを適用してテストケースを導出する。"
            ],
            keyTerms: [
                { term: "移植性テスト", definition: "システムやコンポーネントが、異なる環境（ハードウェア、ソフトウェア、オペレーティングシステムなど）に移植されたときに、どれだけ容易に適用できるかを評価するテスト。インストール性、置換可能性、順応性など。" }
            ],
            content: [
                "移植性テストは、システムやコンポーネントが、異なる環境（ハードウェア、ソフトウェア、オペレーティングシステム、ブラウザなど）に移植されたときに、どれだけ容易に適用できるかを評価する。これは、インストール性、置換可能性、順応性などに焦点を当てる。複数のプラットフォームや環境で動作するシステムにとって重要となる。",
                "移植性テストの目的は、システムが異なる環境で期待通りに動作し、セットアップや移行が容易であることを保証することである。このテストは、ターゲットとなるすべての環境が明確に定義されており、それらすべてでテストできるという前提に基づいている。",
                "移植性テストは、次のような場合に適用可能である。",
                "・複数のオペレーティングシステムやブラウザで動作するウェブアプリケーション。",
                "・異なるハードウェア構成で動作するソフトウェア。",
                "・レガシーシステムから新しいプラットフォームへの移行を計画している場合。",
                "・クラウド環境へのデプロイメントをテストする場合。",
                "移植性テストは、次のような場合に限界がある。",
                "・テスト環境のセットアップとメンテナンスが複雑で、時間とリソースを大量に消費する。",
                "・すべての可能な環境の組み合わせをテストすることが現実的ではない。",
                "・特定の環境に固有の問題を発見するのが難しい場合がある。",
                "移植性テストは、システムが幅広いユーザーや環境で利用可能であることを保証するために不可欠である。チェックリストベースドテスト、構成テスト、スクリプト化されたテストなどが有効である。自動化ツールを活用することで、異なる環境でのテスト実行の効率を高めることができる。"
            ]
        }
    ]
};

export default chapter4;